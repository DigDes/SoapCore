name: Nuget publish

on:
  push:
    branches: master
    tags:
      - 'v*'
jobs:
  build:
    runs-on: ubuntu-16.04
    
    container:
      image: docker://mcr.microsoft.com/dotnet/core/sdk:3.1-alpine     
    steps:
   
    - uses: actions/checkout@v1
    - name: build and publish
      run: |
            dotnet restore src
            dotnet pack --configuration Release --output nupkg src/SoapCore
            dotnet nuget push nupkg/*.nupkg --api-key ${{ secrets.NUGET_API }} -s https://api.nuget.org/v3/index.json

    - name: Set env
      run: echo ::set-env name=RELEASE_VERSION::$(echo ${GITHUB_REF:10})
    - name: Create Release
      id: create_release
      uses: actions/create-release@master
      env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: true
        prerelease: true
    - name: Set output
      id: vars
      run: echo ::set-output name=tag::$(echo ${GITHUB_REF:10})
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: nupkg/SoapCore.${{ steps.vars.outputs.tag }}.nupkg
          asset_name: nupkg/SoapCore.${{ steps.vars.outputs.tag }}.nupkg
          asset_content_type: application/zip
